<?php

namespace ByJG\Daemon\Console;

use ByJG\Daemon\Daemonize;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

class InstallCommand extends Command
{
    protected function configure()
    {
        $this
            ->setName('install')
            ->setDescription('Install a PHP Class as Linux Daemon')
            ->addOption(
                'template',
                't',
                InputOption::VALUE_REQUIRED,
                'Defines the default service template -- initd or upstart',
                'initd'
            )
            ->addOption(
                'no-check',
                'nc',
                InputOption::VALUE_NONE,
                'No check for path or file errors. Just install. ',
                true
            )
            ->addArgument(
                'servicename',
                InputArgument::REQUIRED,
                'The unix service name.'
            )
            ->addArgument(
                'classname',
                InputArgument::REQUIRED,
                'The PHP class and method like ClassName::Method'
            )
            ->addArgument(
                'bootstrap',
                InputArgument::OPTIONAL,
                'The relative path from root directory for the bootstrap file, like vendor/autoload.php',
                'vendor/autoload.php'
            )
            ->addArgument(
                'rootdir',
                InputArgument::OPTIONAL,
                'The root path where your application is installed',
                getcwd() . "/"
            )
            ->addArgument(
                'description',
                InputArgument::OPTIONAL,
                'is an optional service description',
                "Daemon generated by Daemonize"
            )
            ->addArgument(
                'args',
                InputArgument::IS_ARRAY,
                'is an optional arguments for your class'
            );
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        Daemonize::install(
            $input->getArgument('servicename'),
            $input->getArgument('classname'),
            $input->getArgument('bootstrap'),
            $input->getArgument('rootdir'),
            $input->getOption('template'),
            $input->getArgument('description'),
            $input->getArgument('args'),
            $input->getOption('no-check')
        );
    }
}
